<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>Smali</string>
	</array>
	<key>foldingStartMarker</key>
	<string>[\s\t]*\.method</string>
	<key>foldingStopMarker</key>
	<string>[\s\t]*\.end method</string>
	<key>name</key>
	<string>Smali</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#annotation</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#annotation-end</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#annotation-value_list</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#annotation-value</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#annotation-name</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#annotation-access</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment-alone</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment-inline</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#field</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#field-end</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Class name</string>
			<key>match</key>
			<string>^[\s\t]*(\.class)[\s\t]*((?:(?:interface|public|protected|private|abstract|static|final|synchronized|transient|volatile|native|strictfp|synthetic|enum|annotation)[\s\t]+)*)[\s\t]*(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Super / implements class name</string>
			<key>match</key>
			<string>^[\s\t]*(\.(?:super|implements))[\s\t]+(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Source file</string>
			<key>match</key>
			<string>^[\s\t]*(\.source)[\s\t]+(")(.*?)((?&lt;!\\)")(?=[\s\t]*(#.*)?$)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^[\s\t]*(\.method)[\s\t]*((?:(?:bridge|varargs|declared-synchronized|public|protected|private|abstract|static|final|synchronized|transient|volatile|native|strictfp|synthetic|enum)[\s\t]+)*)(constructor )?(&lt;init&gt;|&lt;clinit&gt;|(?:[\$\p{L}_\-][\p{L}\d_\$]*))\(((?:[\[]*(?:Z|B|S|C|I|J|F|D|L(?:[\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*);))*)\)(?:(V)|[\[]*(Z|B|S|C|I|J|F|D)|[\[]*(?:(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;)))(?=[\s\t]*(#.*)?$)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>12</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Method signature and body</string>
			<key>end</key>
			<string>^[\s\t]*(\.end method)(?=[\s\t]*(#.*)?$)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-inline</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Prologue</string>
					<key>match</key>
					<string>^[\s\t]*(\.prologue)(?=[\s\t]*(#.*)?$)</string>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.smali</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.smali</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.smali</string>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>string.interpolated.smali</string>
						</dict>
						<key>13</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.smali</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.smali</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>string.interpolated.smali</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.smali</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.smali</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.smali</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.smali</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.smali</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>string.interpolated.smali</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Local</string>
					<key>match</key>
					<string>^[\s\t]*(\.local)[\s\t]+([vp]\d+),[\s\t]+("[\p{L}\p{N}_\$][\w\$]*"):[\[]*(?:(?:(Z|B|S|C|I|J|F|D)|(?:(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;))))(?:,(")(.*?)((?&lt;!\\)"))?(?:,[\s\t]*(")(.*?)((?&lt;!\\)"))?(?=[\s\t]*(#.*)?$)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.smali</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.smali</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.smali</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.smali</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.control.smali</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>keyword.control.smali</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>keyword.control.smali</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Catch exceptions</string>
					<key>match</key>
					<string>^[\s\t]*(\.catch)[\s\t]+(?:(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;))[\s\t]+{(:[A-Za-z_\d]+)[\s\t]+\.\.[\s\t]+(:[A-Za-z_\d]+)}[\s\t]+(:[A-Za-z_\d]+)(?=[\s\t]*(#.*)?$)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.smali</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.smali</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.smali</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.control.smali</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Gotta catch 'em all!</string>
					<key>match</key>
					<string>^[\s\t]*(\.catchall)[\s\t]+{(:[A-Za-z_\d]+)[\s\t]+\.\.[\s\t]+(:[A-Za-z_\d]+)}[\s\t]+(:[A-Za-z_\d]+)(?=[\s\t]*(#.*)?$)</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>End / Restart Local</string>
					<key>match</key>
					<string>^[\s\t]*(\.(?:end|restart)[\s\t]+local)[\s\t]+[vp]\d+(?=[\s\t]*(#.*)?$)</string>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^[\s\t]*(\.sparse-switch)(?=[\s\t]*(#.*)?$)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.smali</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Sparse Switch</string>
					<key>end</key>
					<string>^[\s\t]*(\.end sparse-switch)(?=[\s\t]*(#.*)?$)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.smali</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-inline</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.smali</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.control.smali</string>
								</dict>
							</dict>
							<key>match</key>
							<string>^[\s\t]*(-?0x(?i:0|[1-9a-f][\da-f]*))[\s\t]+-&gt;[\s\t]+(:[A-Za-z_\d]+)(?=[\s\t]*(#.*)?$)</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.smali</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.smali</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Begin Packed Switch, no idea what literal limit is for these. Have seen up to 0x7f090005</string>
					<key>match</key>
					<string>^[\s\t]*(\.packed-switch)[\s\t]+(-0x1|0x(?i:0|[1-9a-f][\da-f]*))(?=[\s\t]*(#.*)?$)</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>End Packed Switch</string>
					<key>match</key>
					<string>^[\s\t]*(\.end packed-switch)(?=[\s\t]*(#.*)?$)</string>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^[\s\t]*(\.array-data)[\s\t]+(1|2|4|8)(?=[\s\t]*(#.*)?$)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.smali</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.smali</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Array data</string>
					<key>end</key>
					<string>^[\s\t]*(\.end array-data)(?=[\s\t]*(#.*)?$)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.smali</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment-inline</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.smali</string>
								</dict>
							</dict>
							<key>match</key>
							<string>^[\s\t]*(?i:((?:-0x(?:0|[1-9a-f][\da-f]{0,6}|[1-7][\da-f]{7}|8[0]{7})|0x(?:0|[1-9a-f][\da-f]{0,6}|[1-7][\da-f]{7}))[st]?|(?:(?:-0x(?:0|[1-9a-f][\da-f]{0,14}|[1-7][\da-f]{15}|8[0]{15})|0x(?:0|[1-9a-f][\da-f]{0,14}|[1-7][\da-f]{15}))L))\b)(?=[\s\t]*(#.*)?$)</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#field</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#field-end</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#annotation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#annotation-end</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#annotation-value_list</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#annotation-value</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#annotation-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#annotation-access</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-alone</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-method-line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-method-registers_locals</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-method-label</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-method-parameter</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-method-parameter-end</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directives-method-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-10x</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-10x-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-11n</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-11n-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-11x</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-11x-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-22x</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-22x-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-32x</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-32x-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-12x</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-12x-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-21c-string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-21c-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-21c-field</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-21c-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-21h</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-21h-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-21s</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-21s-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-21t</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-21t-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-31t</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-31t-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-22b</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-22b-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-22c-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-22c-type_array</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-22c-field</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-22c-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-22s</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-22s-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-22t</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-22t-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-23x</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-23x-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-3rc-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-3rc-meth</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-3rc-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-35c-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-35c-meth</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-35c-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-51l</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-51l-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-31i</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-31i-relaxed</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-10t-20t-30t</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#opcode-format-10t-20t-30t-relaxed</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Method directives - relaxed</string>
			<key>match</key>
			<string>^[\s\t]*(\.(?:class|super|implements|method|(end )?(?:method|annotation|field)))</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>annotation</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(\.annotation)[\s\t]+(build|runtime|system)[\s\t]+(?:(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;))(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>annotation-access</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>accessFlags property in annotation. Haven't seen any of these go over 0x4019.</string>
			<key>match</key>
			<string>^[\s\t]*(accessFlags)[\s\t]*=[\s\t]*(0x(?:0|[1-9a-f][\da-f]{0,3}))(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>annotation-end</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Parsing this is hard to do right. This is Good Enough™.</string>
			<key>match</key>
			<string>^[\s\t]*(\.end annotation)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>annotation-name</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Name property in annotation</string>
			<key>match</key>
			<string>^[\s\t]*(name)[\s\t]*=[\s\t]*(?:(null)|(")(.*?)((?&lt;!\\)")?)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>annotation-value</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>12</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>13</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>14</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.smali</string>
				</dict>
				<key>15</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>16</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>17</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>18</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>19</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>20</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>21</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>22</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>string.interpolated.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>This is another hack because sublime can't handle multi-line regex, particulaly for 'end'.</string>
			<key>match</key>
			<string>^[\s\t]*(value)[\s\t]*=[\s\t]*(?:(")(.*?)((?&lt;!\\)")?|(?:\.(enum|subannotation)[\s\t]+)?(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;))(?:-&gt;(?:([\p{L}\p{N}_\$][\w\$]*):[\[]*(?:(?:(Z|B|S|C|I|J|F|D)|(?:(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;))))|(&lt;init&gt;|&lt;clinit&gt;|(?:[\$\p{L}_][\p{L}\d_\$]*))\(((?:[\[]*(?:Z|B|S|C|I|J|F|D|L(?:[\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*);))*)\)(?:(V)|[\[]*(Z|B|S|C|I|J|F|D)|[\[]*(?:(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;)))))?(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>annotation-value_list</key>
		<dict>
			<key>begin</key>
			<string>^[\s\t]*(value)[\s\t]*=[\s\t]*{(?=[\s\t]*(#.*)?$)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>This is another hack. Deals.</string>
			<key>end</key>
			<string>^[\s\t]*}(?=[\s\t]*(#.*)?$)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-inline</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.smali</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.smali</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.smali</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.smali</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.smali</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.smali</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:(")(.*?)((?&lt;!\\)")?|(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;))(?:,)?(?=[\s\t]*(#.*)?$)</string>
				</dict>
			</array>
		</dict>
		<key>comment-alone</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>comment.line.number-sign.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Single line, stand alone comment</string>
			<key>match</key>
			<string>^[\s\t]*(#.*)$</string>
		</dict>
		<key>comment-inline</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>comment.line.number-sign.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>In-line comment</string>
			<key>match</key>
			<string>(#.*)$</string>
		</dict>
		<key>directive-method-label</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Label</string>
			<key>match</key>
			<string>^[\s\t]*(:[A-Za-z_\d]+)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>directive-method-line</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Line</string>
			<key>match</key>
			<string>[\s\t]*(\.line)[\s\t]+(\d+)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>directive-method-parameter</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Parameter</string>
			<key>match</key>
			<string>[\s\t]*(\.param(?:eter)?)[\s\t]+(p(?:0|[1-9][\d]?|[1-4][\d]{2}|50[\d]|51[0-2])\b)(?:,[\s\t]*(")(.*?)((?&lt;!\\)"))?(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>directive-method-parameter-end</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Parsing this is hard to do right. This is Good Enough™.</string>
			<key>match</key>
			<string>^[\s\t]*(\.end param)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>directive-method-registers_locals</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Registers / Locals</string>
			<key>match</key>
			<string>[\s\t]*(\.(?:registers|locals))[\s\t]+(\d+)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>directives-method-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(:|\.(?:parameter|line|registers|locals|(?:restart )?local|prologue|(?:end )?(annotation|(sparse|packed)-switch|local)|catch(?:all)?))</string>
		</dict>
		<key>field</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>12</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.smali</string>
				</dict>
				<key>13</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.interpolated.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Field</string>
			<key>match</key>
			<string>^[\s\t]*(\.field)[\s\t]+((?:(?:bridge|varargs|declared-synchronized|public|protected|private|abstract|static|final|synchronized|transient|volatile|native|strictfp|synthetic|enum)[\s\t]+)*)([\p{L}_\$\-][\w\$]*):[\[]*(?:(?:(Z|B|S|C|I|J|F|D)|(?:(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;))))(?:[\s\t]+=[\s\t]+(?:(null|true|false)|(?i:(\d+(?:\.\d+)?[fldst]?))|(?i:((?:-0x(?:0|[1-9a-f][\da-f]{0,6}|[1-7][\da-f]{7}|8[0]{7})|0x(?:0|[1-9a-f][\da-f]{0,6}|[1-7][\da-f]{7}))|(?:(?:-0x(?:0|[1-9a-f][\da-f]{0,14}|[1-7][\da-f]{15}|8[0]{15})|0x(?:0|[1-9a-f][\da-f]{0,14}|[1-7][\da-f]{15}))[fldst]?))\b)|(["'])(.*?)((?&lt;!\\)["'])))?(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>field-end</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Parsing this is hard to do right. This is Good Enough™.</string>
			<key>match</key>
			<string>^[\s\t]*(\.end field)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-10t-20t-30t</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op +AA(AA(AAAA))</string>
			<key>match</key>
			<string>^[\s\t]*(goto(?:/16|/32)?) (:[A-Za-z_\d]+)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-10t-20t-30t-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(goto(?:/16|/32)?)</string>
		</dict>
		<key>opcode-format-10x</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op</string>
			<key>match</key>
			<string>^[\s\t]*(nop|return-void)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-10x-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(nop|return-void)</string>
		</dict>
		<key>opcode-format-11n</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vA, #+B</string>
			<key>match</key>
			<string>^[\s\t]*(const/4)[\s\t]+([vp](?:0|[1-9]|1[0-5])\b),[\s\t]*(?i:(-0x[0-8]|0x[0-7]))(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-11n-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(const/4)</string>
		</dict>
		<key>opcode-format-11x</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vAA</string>
			<key>match</key>
			<string>^[\s\t]*(move-(?:result(?:-wide|-object)?|exception)|return(?:-wide|-object)?|monitor-(?:enter|exit)|throw)[\s\t]+([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-11x-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(move-(?:result(?:-wide|-object)?|exception)|return(?:-wide|-object)?|monitor-(?:enter|exit)|throw)</string>
		</dict>
		<key>opcode-format-12x</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vA, vB</string>
			<key>match</key>
			<string>^[\s\t]*(move(?:-wide|-object)?|array-length|neg-(?:int|long|float|double)|not-(?:int|long)|int-to-(?:long|float|double|byte|char|short)|long-to-(?:int|float|double)|float-to-(?:int|long|double)|double-to-(?:int|long|float)|(?:add|sub|mul|div|rem|and|or|xor|shl|shr|ushr)-(?:int|long)/2addr|(?:add|sub|mul|div|rem)-(?:float|double)/2addr)[\s\t]+([vp](?:0|[1-9]|1[0-5])\b),[\s\t]*([vp](?:0|[1-9]|1[0-5])\b)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-12x-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(move(?:-wide|-object)?|array-length|neg-(?:int|long|float|double)|not-(?:int|long)|int-to-(?:long|float|double|byte|char|short)|long-to-(?:int|float|double)|float-to-(?:int|long|double)|double-to-(?:int|long|float)|(?:add|sub|mul|div|rem|and|or|xor|shl|shr|ushr)-(?:int|long)/2addr|(?:add|sub|mul|div|rem)-(?:float|double)/2addr)</string>
		</dict>
		<key>opcode-format-21c-field</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>string.interpolated.smali</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vAA, field@BBBB</string>
			<key>match</key>
			<string>^[\s\t]*((?:sget|sput)(?:-wide|-object|-boolean|-byte|-char|-short)?)[\s\t]+([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;)-&gt;([\p{L}\p{N}_\$][\w\$]*):[\[]*(?:(?:(Z|B|S|C|I|J|F|D)|(?:(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;))))(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-21c-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(const-string|const-class|check-cast|new-instance|(?:sget|sput)(?:-wide|-object|-boolean|-byte|-char|-short)?)</string>
		</dict>
		<key>opcode-format-21c-string</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vAA, string@BBBB</string>
			<key>match</key>
			<string>^[\s\t]*(const-string(?:/jumbo)?)[\s\t]+([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*(")(.*?)((?&lt;!\\)")(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-21c-type</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vAA, type@BBBB</string>
			<key>match</key>
			<string>^[\s\t]*(const-class|check-cast|new-instance)[\s\t]+([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*[\[]*(?:(?:(Z|B|S|C|I|J|F|D)|(?:(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;))))(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-21h</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vAA, #+BBBB0000(00000000)</string>
			<key>match</key>
			<string>^[\s\t]*(const(?:-wide)?/high16)[\s\t]+([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*((?i:-?0x(?:0|[1-9a-f][\da-f]{0,2}|[1-7][\da-f]{3}|8000)[0]{0,12}L?))\b(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-21h-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(const(?:-wide)?/high16)</string>
		</dict>
		<key>opcode-format-21s</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vAA, #+BBBB</string>
			<key>match</key>
			<string>^[\s\t]*(const(?:-wide)?/16)[\s\t]+([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*(?i:(-0x(?:0|[1-9a-f][\da-f]{0,2}|[1-7][\da-f]{3}|8000)|0x(?:0|[1-9a-f][\da-f]{0,2}|[1-7][\da-f]{3})))\b(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-21s-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(const(?:-wide)?/16)</string>
		</dict>
		<key>opcode-format-21t</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.control.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vAA, +BBBB</string>
			<key>match</key>
			<string>^[\s\t]*(if-(?:eq|ne|lt|ge|gt|le)z)[\s\t]+([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*(:[A-Za-z_\d]+)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-21t-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(if-(?:eq|ne|lt|ge|gt|le)z)</string>
		</dict>
		<key>opcode-format-22b</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vAA, vBB, #+CC</string>
			<key>match</key>
			<string>^[\s\t]*((?:add|rsub|mul|div|rem|and|or|xor|shl|shr|ushr)-int/lit8)[\s\t]+([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*(?i:(-0x(?:[\da-f]|[1-7][\da-f]|80)|0x(?:[\da-f]|[1-7][\da-f])))\b(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-22b-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*((?:add|rsub|mul|div|rem|and|or|xor|shl|shr|ushr)-int/lit8)</string>
		</dict>
		<key>opcode-format-22c-field</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>string.interpolated.smali</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vA, vB, field@CCCC</string>
			<key>match</key>
			<string>^[\s\t]*((?:iget|iput)(?:-wide|-object|-boolean|-byte|-char|-short)?)[\s\t]+([vp](?:0|[1-9]|1[0-5])\b),[\s\t]*([vp](?:0|[1-9]|1[0-5])\b),[\s\t]*(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;)-&gt;([\p{L}\p{N}_\$][\w\$]*):[\[]*(?:(Z|B|S|C|I|J|F|D|(?:(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;))))(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-22c-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(instance-of|new-array|(?:iget|iput)(?:-wide|-object|-boolean|-byte|-char|-short)?)</string>
		</dict>
		<key>opcode-format-22c-type</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vA, vB, type@CCCC</string>
			<key>match</key>
			<string>^[\s\t]*(instance-of)[\s\t]+([vp](?:0|[1-9]|1[0-5])\b),[\s\t]*([vp](?:0|[1-9]|1[0-5])\b),[\s\t]*[\[]*(?:(Z|B|S|C|I|J|F|D)|(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;))(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-22c-type_array</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vA, vB, [type@CCCC</string>
			<key>match</key>
			<string>^[\s\t]*(new-array)[\s\t]+([vp](?:0|[1-9]|1[0-5])\b),[\s\t]*([vp](?:0|[1-9]|1[0-5])\b),[\s\t]*[\[]+(?:(Z|B|S|C|I|J|F|D)|(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;))(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-22s</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vA, vB, #+CCCC</string>
			<key>match</key>
			<string>^[\s\t]*((?:(?:add|mul|div|rem|and|or|xor)-int/lit16)|rsub-int)[\s\t]+([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*(?i:(-0x(?:0|[1-9a-f][\da-f]{0,2}|[1-7][\da-f]{3}|8000)|0x(?:0|[1-9a-f][\da-f]{0,2}|[1-7][\da-f]{3})))\b(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-22s-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*((?:(?:add|mul|div|rem|and|or|xor)-int/lit16)|rsub-int)</string>
		</dict>
		<key>opcode-format-22t</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>*Format: op vA, vB, +CCCC</string>
			<key>match</key>
			<string>^[\s\t]*(if-(?:eq|ne|lt|ge|gt|le))[\s\t]+([vp](?:0|[1-9]|1[0-5])\b),[\s\t]*([vp](?:0|[1-9]|1[0-5])\b),[\s\t]*(:[A-Za-z_\d]+)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-22t-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(if-(?:eq|ne|lt|ge|gt|le))</string>
		</dict>
		<key>opcode-format-22x</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vAA, vBBBB</string>
			<key>match</key>
			<string>^[\s\t]*(move(?:-wide|-object)?/from16)[\s\t]+([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*([vp](?:0|[1-9][\d]{0,3}|[1-5][\d]{4}|6[0-4][\d]{3}|65[0-4][\d]{2}|655[0-2][\d]|6553[0-5])\b)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-22x-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(move(?:-wide|-object)?/from16)</string>
		</dict>
		<key>opcode-format-23x</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vAA, vBB, vCC</string>
			<key>match</key>
			<string>^[\s\t]*((?:cmpl|cmpg)-(?:float|double)|cmp-long|(?:aget|aput)(?:-wide|-object|-boolean|-byte|-char|-short)?|(?:add|sub|mul|div|rem|and|or|xor|shl|shr|ushr)-(?:int|long)|(?:add|sub|mul|div|rem)-(?:float|double))[\s\t]+([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-23x-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*((?:cmpl|cmpg)-(float|double)|cmp-long|(?:aget|aput)(?:-wide|-object|-boolean|-byte|-char|-short)?|(?:add|sub|mul|div|rem|and|or|xor|shl|shr|ushr)-(?:int|long)|(?:add|sub|mul|div|rem)-(?:float|double))</string>
		</dict>
		<key>opcode-format-31i</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vAA, #+BBBBBBBB</string>
			<key>match</key>
			<string>^[\s\t]*(const(?:-wide/32)?)[\s\t]+([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*(?i:(-0x(?:0|[1-9a-f][\da-f]{0,6}|[1-7][\da-f]{7}|8[0]{7})|0x(?:0|[1-9a-f][\da-f]{0,6}|[1-7][\da-f]{7}))\b)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-31i-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(const(?:-wide/32)?)</string>
		</dict>
		<key>opcode-format-31t</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vAA, +BBBBBBBB</string>
			<key>match</key>
			<string>^[\s\t]*(fill-array-data|(?:packed|sparse)-switch)[\s\t]+([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*(:[A-Za-z_\d]+)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-31t-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(fill-array-data|(?:packed|sparse)-switch)</string>
		</dict>
		<key>opcode-format-32x</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vAAAA, vBBBB</string>
			<key>match</key>
			<string>^[\s\t]*(move(?:-wide|-object)?/16)[\s\t]+([vp](?:0|[1-9][\d]{0,3}|[1-5][\d]{4}|6[0-4][\d]{3}|65[0-4][\d]{2}|655[0-2][\d]|6553[0-5])\b),[\s\t]*([vp](?:0|[1-9][\d]{0,3}|[1-5][\d]{4}|6[0-4][\d]{3}|65[0-4][\d]{2}|655[0-2][\d]|6553[0-5])\b)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-32x-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(move(?:-wide|-object)?/16)</string>
		</dict>
		<key>opcode-format-35c-meth</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.smali</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>12</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>13</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>14</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>15</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>16</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>17</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>18</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>19</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>20</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>21</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>22</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>23</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>24</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>25</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>26</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>27</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>28</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>29</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>30</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>31</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>32</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>33</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>34</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>35</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op {vC, vD, vE, vF, vG}, meth@BBBB</string>
			<key>match</key>
			<string>^[\s\t]*(invoke-(?:virtual|super|direct|static|interface)) {[\s\t]*([vp](?:0|[1-9]|1[0-5])\b)?(?:,[\s\t]*([vp](?:0|[1-9]|1[0-5])\b))?(?:,[\s\t]*([vp](?:0|[1-9]|1[0-5])\b))?(?:,[\s\t]*([vp](?:0|[1-9]|1[0-5])\b))?(?:,[\s\t]*([vp](?:0|[1-9]|1[0-5])\b))?[\s\t]*},[\s\t]*[\[]*(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;)-&gt;(&lt;init&gt;|&lt;clinit&gt;|(?:[\$\p{L}_][\p{L}\d_\$]*))\((?:[\[]*(Z|B|S|C|I|J|F|D)|(?:[\[]*(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;)))?(?:[\[]*(Z|B|S|C|I|J|F|D)|(?:[\[]*(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;)))?(?:[\[]*(Z|B|S|C|I|J|F|D)|(?:[\[]*(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;)))?(?:[\[]*(Z|B|S|C|I|J|F|D)|(?:[\[]*(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;)))?(?:[\[]*(Z|B|S|C|I|J|F|D)|(?:[\[]*(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;)))?\)(?:(?:(V)|[\[]*(Z|B|S|C|I|J|F|D))|(?:[\[]*(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;)))(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-35c-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(filled-new-array|invoke-(?:virtual|super|direct|static|interface))</string>
		</dict>
		<key>opcode-format-35c-type</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op {vC, vD, vE, vF, vG}, type@BBBB</string>
			<key>match</key>
			<string>^[\s\t]*(filled-new-array) {([vp](?:0|[1-9]|1[0-5])\b),[\s\t]*([vp](?:0|[1-9]|1[0-5])\b)(?:,[\s\t]*([vp](?:0|[1-9]|1[0-5])\b))?(?:,[\s\t]*([vp](?:0|[1-9]|1[0-5])\b))?(?:,[\s\t]*([vp](?:0|[1-9]|1[0-5])\b))?},[\s\t]*[\[]+(?:(Z|B|S|C|I|J|F|D)|(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;))(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-3rc-meth</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>12</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>13</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>14</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>15</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.smali</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op {vCCCC .. vNNNN}, meth@BBBB</string>
			<key>match</key>
			<string>^[\s\t]*(invoke-(?:virtual|super|direct|static|interface)/range) {[\s\t]*([vp](?:0|[1-9][\d]{0,3}|[1-5][\d]{4}|6[0-4][\d]{3}|65[0-4][\d]{2}|655[0-2][\d]|6553[0-5])\b) \.\. ([vp](?:0|[1-9][\d]{0,3}|[1-5][\d]{4}|6[0-4][\d]{3}|65[0-4][\d]{2}|655[0-2][\d]|6553[0-5])\b)[\s\t]*},[\s\t]*[\[]*(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;)-&gt;(&lt;init&gt;|&lt;clinit&gt;|(?:[\$\p{L}_][\p{L}\d_\$]*))\(((?:[\[]*(?:Z|B|S|C|I|J|F|D|L(?:[\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*);))*)\)(?:(V)|[\[]*(Z|B|S|C|I|J|F|D)|[\[]*(?:(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;)))(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-3rc-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*((?:filled-new-array|invoke-(?:virtual|super|direct|static|interface))/range)</string>
		</dict>
		<key>opcode-format-3rc-type</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op {vCCCC .. vNNNN}, type@BBBB</string>
			<key>match</key>
			<string>^[\s\t]*(filled-new-array/range) {([vp](?:0|[1-9][\d]{0,3}|[1-5][\d]{4}|6[0-4][\d]{3}|65[0-4][\d]{2}|655[0-2][\d]|6553[0-5])\b) \.\. ([vp](?:0|[1-9][\d]{0,3}|[1-5][\d]{4}|6[0-4][\d]{3}|65[0-4][\d]{2}|655[0-2][\d]|6553[0-5])\b)},[\s\t]*[\[]+(?:(Z|B|S|C|I|J|F|D)|(L)([\p{L}\p{N}_\$][\p{L}\d_\$]*(?:/[\p{L}\p{N}_\$][\p{L}\d_\$]*)*)(;))(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-51l</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.smali</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.smali</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.smali</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Format: op vAA, #+BBBBBBBBBBBBBBBB</string>
			<key>match</key>
			<string>^[\s\t]*(const-wide)(?!/32)[\s\t]+([vp](?:0|[1-9][\d]?|1[\d]{2}|2[0-4][\d]|25[0-5])\b),[\s\t]*(?i:((?:-0x(?:0|[1-9a-f][\da-f]{0,6}|[1-7][\da-f]{7}|8[0]{7})|0x(?:0|[1-9a-f][\da-f]{0,6}|[1-7][\da-f]{7}))|(?:(?:-0x(?:0|[1-9a-f][\da-f]{0,14}|[1-7][\da-f]{15}|8[0]{15})|0x(?:0|[1-9a-f][\da-f]{0,14}|[1-7][\da-f]{15}))L))\b)(?=[\s\t]*(#.*)?$)</string>
		</dict>
		<key>opcode-format-51l-relaxed</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.smali</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[\s\t]*(const-wide)(?!\/32)</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.smali</string>
	<key>uuid</key>
	<string>d6fe4632-f21a-4533-8908-723df0b58ac0</string>
</dict>
</plist>
